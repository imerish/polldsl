package polldsl.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptOdpowiedzPojedyncza = createDescriptorForOdpowiedzPojedyncza();
  /*package*/ final ConceptDescriptor myConceptOdpowiedzWielokrotna = createDescriptorForOdpowiedzWielokrotna();
  /*package*/ final ConceptDescriptor myConceptPytanie = createDescriptorForPytanie();
  /*package*/ final ConceptDescriptor myConceptPytanieJednokrotnegoWyboru = createDescriptorForPytanieJednokrotnegoWyboru();
  /*package*/ final ConceptDescriptor myConceptPytanieOtwarte = createDescriptorForPytanieOtwarte();
  /*package*/ final ConceptDescriptor myConceptPytanieWielokrotnegoWyboru = createDescriptorForPytanieWielokrotnegoWyboru();
  /*package*/ final ConceptDescriptor myConceptTest = createDescriptorForTest();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptOdpowiedzPojedyncza, myConceptOdpowiedzWielokrotna, myConceptPytanie, myConceptPytanieJednokrotnegoWyboru, myConceptPytanieOtwarte, myConceptPytanieWielokrotnegoWyboru, myConceptTest);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.OdpowiedzPojedyncza:
        return myConceptOdpowiedzPojedyncza;
      case LanguageConceptSwitch.OdpowiedzWielokrotna:
        return myConceptOdpowiedzWielokrotna;
      case LanguageConceptSwitch.Pytanie:
        return myConceptPytanie;
      case LanguageConceptSwitch.PytanieJednokrotnegoWyboru:
        return myConceptPytanieJednokrotnegoWyboru;
      case LanguageConceptSwitch.PytanieOtwarte:
        return myConceptPytanieOtwarte;
      case LanguageConceptSwitch.PytanieWielokrotnegoWyboru:
        return myConceptPytanieWielokrotnegoWyboru;
      case LanguageConceptSwitch.Test:
        return myConceptTest;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForOdpowiedzPojedyncza() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("polldsl", "OdpowiedzPojedyncza", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c354ccL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7c8d8304-4bb5-4cb7-90a6-06844614aab2(polldsl.structure)/5724743054850741452");
    b.version(2);
    b.property("tytul", 0x4f725f7a36c354cfL).type(PrimitiveTypeId.STRING).origin("5724743054850741455").done();
    b.alias("()");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOdpowiedzWielokrotna() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("polldsl", "OdpowiedzWielokrotna", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c416bcL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7c8d8304-4bb5-4cb7-90a6-06844614aab2(polldsl.structure)/5724743054850791100");
    b.version(2);
    b.property("tytul", 0x4f725f7a36c416bfL).type(PrimitiveTypeId.STRING).origin("5724743054850791103").done();
    b.alias("[]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPytanie() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("polldsl", "Pytanie", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c21a1fL);
    b.class_(false, true, false);
    b.origin("r:7c8d8304-4bb5-4cb7-90a6-06844614aab2(polldsl.structure)/5724743054850660895");
    b.version(2);
    b.alias("Pytanie");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPytanieJednokrotnegoWyboru() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("polldsl", "PytanieJednokrotnegoWyboru", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c354beL);
    b.class_(false, false, false);
    b.super_("polldsl.structure.Pytanie", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c21a1fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7c8d8304-4bb5-4cb7-90a6-06844614aab2(polldsl.structure)/5724743054850741438");
    b.version(2);
    b.property("tytul", 0x4f725f7a36c354c1L).type(PrimitiveTypeId.STRING).origin("5724743054850741441").done();
    b.aggregate("odpowiedzi", 0x4f725f7a36c354c3L).target(0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c354ccL).optional(false).ordered(true).multiple(true).origin("5724743054850741443").done();
    b.alias("Pytanie");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPytanieOtwarte() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("polldsl", "PytanieOtwarte", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c354aaL);
    b.class_(false, false, false);
    b.super_("polldsl.structure.Pytanie", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c21a1fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7c8d8304-4bb5-4cb7-90a6-06844614aab2(polldsl.structure)/5724743054850741418");
    b.version(2);
    b.property("tytul", 0x4f725f7a36c354abL).type(PrimitiveTypeId.STRING).origin("5724743054850741419").done();
    b.alias("Pytanie");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPytanieWielokrotnegoWyboru() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("polldsl", "PytanieWielokrotnegoWyboru", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c354c5L);
    b.class_(false, false, false);
    b.super_("polldsl.structure.Pytanie", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c21a1fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7c8d8304-4bb5-4cb7-90a6-06844614aab2(polldsl.structure)/5724743054850741445");
    b.version(2);
    b.property("tytul", 0x4f725f7a36c354c8L).type(PrimitiveTypeId.STRING).origin("5724743054850741448").done();
    b.aggregate("odpowiedzi", 0x4f725f7a36c354caL).target(0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c416bcL).optional(false).ordered(true).multiple(true).origin("5724743054850741450").done();
    b.alias("Pytanie");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("polldsl", "Test", 0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c21a12L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:7c8d8304-4bb5-4cb7-90a6-06844614aab2(polldsl.structure)/5724743054850660882");
    b.version(2);
    b.property("opis", 0x4f725f7a36c21a1dL).type(PrimitiveTypeId.STRING).origin("5724743054850660893").done();
    b.aggregate("pytania", 0x4f725f7a36c21a15L).target(0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c21a1fL).optional(false).ordered(true).multiple(true).origin("5724743054850660885").done();
    b.alias("Test");
    return b.create();
  }
}
