package polldsl.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_CanBeChild;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class OdpowiedzWielokrotna_Constraints extends BaseConstraintsDescriptor {
  public OdpowiedzWielokrotna_Constraints() {
    super(CONCEPTS.OdpowiedzWielokrotna$vs);
  }

  @Override
  protected ConstraintFunction<ConstraintContext_CanBeChild, Boolean> calculateCanBeChildConstraint() {
    return new ConstraintFunction<ConstraintContext_CanBeChild, Boolean>() {
      @NotNull
      public Boolean invoke(@NotNull ConstraintContext_CanBeChild context, @Nullable CheckingNodeContext checkingNodeContext) {
        boolean result = staticCanBeAChild(context.getNode(), context.getParentNode(), context.getConcept(), context.getLink());

        if (!(result) && checkingNodeContext != null) {
          checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
        }

        return result;
      }
    };
  }
  private static boolean staticCanBeAChild(SNode node, SNode parentNode, SAbstractConcept childConcept, SContainmentLink link) {
    return SNodeOperations.isInstanceOf(parentNode, CONCEPTS.PytanieWielokrotnegoWyboru$_X) && SNodeOperations.getChildren(parentNode).size() < 5;
  }
  private static final SNodePointer canBeChildBreakingPoint = new SNodePointer("r:2910f05b-b250-49f7-b554-0f01cf507f78(polldsl.constraints)", "2152556657916281566");

  private static final class CONCEPTS {
    /*package*/ static final SConcept OdpowiedzWielokrotna$vs = MetaAdapterFactory.getConcept(0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c416bcL, "polldsl.structure.OdpowiedzWielokrotna");
    /*package*/ static final SConcept PytanieWielokrotnegoWyboru$_X = MetaAdapterFactory.getConcept(0x297b947979844bdaL, 0x95592f87b96e8dd6L, 0x4f725f7a36c354c5L, "polldsl.structure.PytanieWielokrotnegoWyboru");
  }
}
